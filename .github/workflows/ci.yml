name: CD3 PoC CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter (SAST)
        run: npm run lint

      - name: Run unit tests with coverage
        run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test-and-lint
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=,format=short

      - name: Scan repository for vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0.15.4
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
          format: cyclonedx-json
          output-file: sbom.json
          upload-artifact: false

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx-json
          path: sbom.json
          retention-days: 5

      - name: Sign the container image with Cosign (Keyless)
        uses: sigstore/cosign-installer@main
      - run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}

  update-gitops-repo:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          repository: rapidghi/cd3-poc-gitops # <-- IMPORTANT: Change 'rapidghi' to your GitHub username
          token: ${{ secrets.GITOPS_PAT }}

      - name: Update image tag
        run: |
          IMAGE_TAG=${{ github.sha }}
          sed -i "s/tag: .*/tag: \"${IMAGE_TAG::7}\"/" apps/cd3-poc-app/overlays/staging/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update image tag to ${{ github.sha }}" || echo "No changes to commit"
          git push